cc_library(
    name = "boost_isystem",
    visibility = ["//visibility:public"],
    deps = ["@tools_cpp_toolchain"],
    includes = [".include"],
    srcs = ["json.cpp"],
    hdrs = glob([".include/boost/{}".format(hdr) for hdr in [
        "*.hpp",
        "detail/*.hpp",
        "json/*.hpp",
        "json/detail/*.hpp",
        "json/impl/*.hpp",
        "json/impl/*.ipp",
        "json/detail/impl/*.hpp",
        "json/detail/impl/*.ipp",
        "json/detail/ryu/*.hpp",
        "json/detail/ryu/detail/*.hpp",
        "json/detail/ryu/impl/*.ipp",
        "config/*.hpp",
        "config/detail/*.hpp",
        "config/compiler/*.hpp",
        "config/stdlib/*.hpp",
        "config/platform/*.hpp",
        "exception/*.hpp",
        "exception/detail/*.hpp",
        "container/*.hpp",
        "container/detail/*.hpp",
        "container/pmr/*.hpp",
        "assert/*.hpp",
        "core/*.hpp",
        "core/detail/*.hpp",
        "move/*.hpp",
        "move/detail/*.hpp",
        "intrusive/*.hpp",
        "intrusive/detail/*.hpp",
        "system/*.hpp",
        "system/detail/*.hpp",
        "type_traits/*.hpp",
        "type_traits/detail/*.hpp",
        "smart_ptr/*.hpp",
        "smart_ptr/detail/*.hpp",
        "utility/*.hpp",
        "utility/detail/*.hpp",
        "mp11/*.hpp",
        "mp11/detail/*.hpp",
        "align/*.hpp",
        "align/detail/*.hpp",
    ]]),
)

# [(
#     cc_library(
#         name = lib,
#         hdrs = args["hdrs"],
#         deps = args.get("deps", []),
#         visibility = ["//visibility:public"]
#     ),
#     cc_library(
#         name = "{}_isystem".format(lib),
#         hdrs = [".include/boost/{}".format(hdr) for hdr in args["hdrs"]],
#         deps = args.get("deps", []),
#         includes = [".include"],
#         visibility = ["//visibility:public"],
#     )) for lib, args in {
#         "exception": {
#             "hdrs": [
#                 "throw_exception.hpp",
#                 "exception/errinfo_errno.hpp",
#                 "exception/detail/clone_current_exception.hpp",
#                 "exception/detail/object_hex_dump.hpp",
#                 "exception/detail/shared_ptr.hpp",
#                 "exception/detail/exception_ptr.hpp",
#                 "exception/detail/error_info_impl.hpp",
#                 "exception/detail/type_info.hpp",
#                 "exception/detail/is_output_streamable.hpp",
#                 "exception/errinfo_file_name.hpp",
#                 "exception/errinfo_at_line.hpp",
#                 "exception/errinfo_type_info_name.hpp",
#                 "exception/errinfo_file_handle.hpp",
#                 "exception/info_tuple.hpp",
#                 "exception/enable_error_info.hpp",
#                 "exception/errinfo_nested_exception.hpp",
#                 "exception/errinfo_api_function.hpp",
#                 "exception/current_exception_cast.hpp",
#                 "exception/to_string_stub.hpp",
#                 "exception/get_error_info.hpp",
#                 "exception/to_string.hpp",
#                 "exception/diagnostic_information.hpp",
#                 "exception/error_info.hpp",
#                 "exception/enable_current_exception.hpp",
#                 "exception/info.hpp",
#                 "exception/all.hpp",
#                 "exception/exception.hpp",
#                 "exception/errinfo_file_open_mode.hpp",
#             ],
#         },
#         "container": {
#             "hdrs": [

#                 "container/devector.hpp",
#                 "container/map.hpp",
#                 "container/detail/adaptive_node_pool.hpp",
#                 "container/detail/is_container.hpp",
#                 "container/detail/auto_link.hpp",
#                 "container/detail/pool_common.hpp",
#                 "container/detail/multiallocation_chain.hpp",
#                 "container/detail/flat_tree.hpp",
#                 "container/detail/function_detector.hpp",
#                 "container/detail/singleton.hpp",
#                 "container/detail/pool_resource.hpp",
#                 "container/detail/node_alloc_holder.hpp",
#                 "container/detail/value_functors.hpp",
#                 "container/detail/thread_mutex.hpp",
#                 "container/detail/value_init.hpp",
#                 "container/detail/compare_functors.hpp",
#                 "container/detail/container_rebind.hpp",
#                 "container/detail/copy_move_algo.hpp",
#                 "container/detail/iterator_to_raw_pointer.hpp",
#                 "container/detail/type_traits.hpp",
#                 "container/detail/std_fwd.hpp",
#                 "container/detail/workaround.hpp",
#                 "container/detail/next_capacity.hpp",
#                 "container/detail/block_slist.hpp",
#                 "container/detail/pair.hpp",
#                 "container/detail/tree.hpp",
#                 "container/detail/is_sorted.hpp",
#                 "container/detail/placement_new.hpp",
#                 "container/detail/block_list.hpp",
#                 "container/detail/allocation_type.hpp",
#                 "container/detail/node_pool.hpp",
#                 "container/detail/math_functions.hpp",
#                 "container/detail/is_contiguous_container.hpp",
#                 "container/detail/addressof.hpp",
#                 "container/detail/dispatch_uses_allocator.hpp",
#                 "container/detail/construct_in_place.hpp",
#                 "container/detail/alloc_helpers.hpp",
#                 "container/detail/is_pair.hpp",
#                 "container/detail/algorithm.hpp",
#                 "container/detail/iterators.hpp",
#                 "container/detail/transform_iterator.hpp",
#                 "container/detail/alloc_lib.h",
#                 "container/detail/config_begin.hpp",
#                 "container/detail/mpl.hpp",
#                 "container/detail/pair_key_mapped_of_value.hpp",
#                 "container/detail/container_or_allocator_rebind.hpp",
#                 "container/detail/variadic_templates_tools.hpp",
#                 "container/detail/dlmalloc.hpp",
#                 "container/detail/node_pool_impl.hpp",
#                 "container/detail/mutex.hpp",
#                 "container/detail/version_type.hpp",
#                 "container/detail/allocator_version_traits.hpp",
#                 "container/detail/config_end.hpp",
#                 "container/detail/adaptive_node_pool_impl.hpp",
#                 "container/detail/destroyers.hpp",
#                 "container/detail/pool_common_alloc.hpp",
#                 "container/detail/minimal_char_traits_header.hpp",
#                 "container/detail/advanced_insert_int.hpp",
#                 "container/detail/min_max.hpp",
#                 "container/detail/iterator.hpp",
#                 "container/detail/guards_dended.hpp",
#                 "container/container_fwd.hpp",
#                 "container/scoped_allocator_fwd.hpp",
#                 "container/node_handle.hpp",
#                 "container/flat_map.hpp",
#                 "container/static_vector.hpp",
#                 "container/vector.hpp",
#                 "container/string.hpp",
#                 "container/deque.hpp",
#                 "container/allocator.hpp",
#                 "container/set.hpp",
#                 "container/stable_vector.hpp",
#                 "container/node_allocator.hpp",
#                 "container/options.hpp",
#                 "container/uses_allocator_fwd.hpp",
#                 "container/flat_set.hpp",
#                 "container/small_vector.hpp",
#                 "container/list.hpp",
#                 "container/pmr/devector.hpp",
#                 "container/pmr/synchronized_pool_resource.hpp",
#                 "container/pmr/map.hpp",
#                 "container/pmr/resource_adaptor.hpp",
#                 "container/pmr/flat_map.hpp",
#                 "container/pmr/unsynchronized_pool_resource.hpp",
#                 "container/pmr/vector.hpp",
#                 "container/pmr/string.hpp",
#                 "container/pmr/deque.hpp",
#                 "container/pmr/pool_options.hpp",
#                 "container/pmr/set.hpp",
#                 "container/pmr/stable_vector.hpp",
#                 "container/pmr/monotonic_buffer_resource.hpp",
#                 "container/pmr/global_resource.hpp",
#                 "container/pmr/flat_set.hpp",
#                 "container/pmr/small_vector.hpp",
#                 "container/pmr/list.hpp",
#                 "container/pmr/slist.hpp",
#                 "container/pmr/polymorphic_allocator.hpp",
#                 "container/pmr/memory_resource.hpp",
#                 "container/slist.hpp",
#                 "container/new_allocator.hpp",
#                 "container/adaptive_pool.hpp",
#                 "container/allocator_traits.hpp",
#                 "container/scoped_allocator.hpp",
#                 "container/throw_exception.hpp",
#                 "container/uses_allocator.hpp",

#             ],
#         },

#         "assert": {
#             "hdrs": [
#                 "assert.hpp",
#                 "assert/source_location.hpp",
#                 "current_function.hpp",
#                 "cstdint.hpp",
#             ],
#             "deps": [":core_isystem"],
#         },
#         "core": {
#             "hdrs": [
#                 "current_function.hpp",

#                 "cstdfloat.hpp",
#                 "cstdlib.hpp",
#                 "cstdint.hpp",
#                 "core/empty_value.hpp",
#                 "core/pointer_traits.hpp",
#                 "core/enable_if.hpp",
#                 "core/detail/splitmix64.hpp",
#                 "core/detail/string_view.hpp",
#                 "core/cmath.hpp",
#                 "core/demangle.hpp",
#                 "core/quick_exit.hpp",
#                 "core/use_default.hpp",
#                 "core/type_name.hpp",
#                 "core/bit.hpp",
#                 "core/underlying_type.hpp",
#                 "core/ignore_unused.hpp",
#                 "core/allocator_access.hpp",
#                 "core/first_scalar.hpp",
#                 "core/uncaught_exceptions.hpp",
#                 "core/scoped_enum.hpp",
#                 "core/noinit_adaptor.hpp",
#                 "core/verbose_terminate_handler.hpp",
#                 "core/checked_delete.hpp",
#                 "core/ref.hpp",
#                 "core/nvp.hpp",
#                 "core/default_allocator.hpp",
#                 "core/alloc_construct.hpp",
#                 "core/lightweight_test.hpp",
#                 "core/addressof.hpp",
#                 "core/is_same.hpp",
#                 "core/typeinfo.hpp",
#                 "core/noncopyable.hpp",
#                 "core/null_deleter.hpp",
#                 "core/swap.hpp",
#                 "core/exchange.hpp",
#                 "core/lightweight_test_trait.hpp",
#                 "core/no_exceptions_support.hpp",
#                 "core/span.hpp",
#                 "core/allocator_traits.hpp",
#                 "core/explicit_operator_bool.hpp",

#             ],
#         },

#         "config": {
#             "hdrs": [

#                 "config.hpp",
#                 "config/assert_cxx11.hpp",
#                 "config/detail/suffix.hpp",
#                 "config/detail/posix_features.hpp",
#                 "config/detail/select_platform_config.hpp",
#                 "config/detail/select_stdlib_config.hpp",
#                 "config/detail/select_compiler_config.hpp",
#                 "config/detail/cxx_composite.hpp",
#                 "config/auto_link.hpp",
#                 "config/assert_cxx98.hpp",
#                 "config/no_tr1/cmath.hpp",
#                 "config/no_tr1/memory.hpp",
#                 "config/no_tr1/utility.hpp",
#                 "config/no_tr1/complex.hpp",
#                 "config/no_tr1/functional.hpp",
#                 "config/abi_prefix.hpp",
#                 "config/warning_disable.hpp",
#                 "config/assert_cxx03.hpp",
#                 "config/workaround.hpp",
#                 "config/abi_suffix.hpp",
#                 "config/assert_cxx17.hpp",
#                 "config/platform/vxworks.hpp",
#                 "config/platform/zos.hpp",
#                 "config/platform/hpux.hpp",
#                 "config/platform/macos.hpp",
#                 "config/platform/haiku.hpp",
#                 "config/platform/bsd.hpp",
#                 "config/platform/beos.hpp",
#                 "config/platform/cygwin.hpp",
#                 "config/platform/cray.hpp",
#                 "config/platform/qnxnto.hpp",
#                 "config/platform/vms.hpp",
#                 "config/platform/win32.hpp",
#                 "config/platform/wasm.hpp",
#                 "config/platform/irix.hpp",
#                 "config/platform/aix.hpp",
#                 "config/platform/linux.hpp",
#                 "config/platform/amigaos.hpp",
#                 "config/platform/cloudabi.hpp",
#                 "config/platform/symbian.hpp",
#                 "config/platform/solaris.hpp",
#                 "config/assert_cxx14.hpp",
#                 "config/stdlib/dinkumware.hpp",
#                 "config/stdlib/modena.hpp",
#                 "config/stdlib/libstdcpp3.hpp",
#                 "config/stdlib/msl.hpp",
#                 "config/stdlib/libcpp.hpp",
#                 "config/stdlib/stlport.hpp",
#                 "config/stdlib/sgi.hpp",
#                 "config/stdlib/roguewave.hpp",
#                 "config/stdlib/libcomo.hpp",
#                 "config/stdlib/vacpp.hpp",
#                 "config/stdlib/xlcpp_zos.hpp",
#                 "config/header_deprecated.hpp",
#                 "config/requires_threads.hpp",
#                 "config/assert_cxx20.hpp",
#                 "config/abi/borland_suffix.hpp",
#                 "config/abi/msvc_suffix.hpp",
#                 "config/abi/borland_prefix.hpp",
#                 "config/abi/msvc_prefix.hpp",
#                 "config/compiler/pathscale.hpp",
#                 "config/compiler/mpw.hpp",
#                 "config/compiler/visualc.hpp",
#                 "config/compiler/diab.hpp",
#                 "config/compiler/kai.hpp",
#                 "config/compiler/hp_acc.hpp",
#                 "config/compiler/codegear.hpp",
#                 "config/compiler/gcc.hpp",
#                 "config/compiler/comeau.hpp",
#                 "config/compiler/sgi_mipspro.hpp",
#                 "config/compiler/cray.hpp",
#                 "config/compiler/metrowerks.hpp",
#                 "config/compiler/gcc_xml.hpp",
#                 "config/compiler/xlcpp.hpp",
#                 "config/compiler/sunpro_cc.hpp",
#                 "config/compiler/clang_version.hpp",
#                 "config/compiler/greenhills.hpp",
#                 "config/compiler/compaq_cxx.hpp",
#                 "config/compiler/borland.hpp",
#                 "config/compiler/clang.hpp",
#                 "config/compiler/digitalmars.hpp",
#                 "config/compiler/intel.hpp",
#                 "config/compiler/common_edg.hpp",
#                 "config/compiler/nvcc.hpp",
#                 "config/compiler/pgi.hpp",
#                 "config/compiler/vacpp.hpp",
#                 "config/compiler/xlcpp_zos.hpp",
#                 "config/user.hpp",
#                 "config/helper_macros.hpp",
#                 "config/pragma_message.hpp",

#             ],
#         },
#         "json": {
#             "deps": ["//src/boost:config_isystem", "//src/boost:assert_isystem", "//src/boost:exception_isystem"],
#             "hdrs": [
#                 "json.hpp",
#                 "json/static_resource.hpp",
#                 "json/detail/sse2.hpp",
#                 "json/detail/hash_combine.hpp",
#                 "json/detail/buffer.hpp",
#                 "json/detail/default_resource.hpp",
#                 "json/detail/shared_resource.hpp",
#                 "json/detail/stream.hpp",
#                 "json/detail/format.hpp",
#                 "json/detail/stack.hpp",
#                 "json/detail/value.hpp",
#                 "json/detail/digest.hpp",
#                 "json/detail/utf8.hpp",
#                 "json/detail/impl/format.ipp",
#                 "json/detail/impl/default_resource.ipp",
#                 "json/detail/impl/except.ipp",
#                 "json/detail/impl/stack.ipp",
#                 "json/detail/impl/string_impl.ipp",
#                 "json/detail/impl/array.hpp",
#                 "json/detail/impl/handler.ipp",
#                 "json/detail/impl/shared_resource.ipp",
#                 "json/detail/align.hpp",
#                 "json/detail/ryu/detail/d2s.hpp",
#                 "json/detail/ryu/detail/digit_table.hpp",
#                 "json/detail/ryu/detail/d2s_full_table.hpp",
#                 "json/detail/ryu/detail/d2s_intrinsics.hpp",
#                 "json/detail/ryu/detail/common.hpp",
#                 "json/detail/ryu/ryu.hpp",
#                 "json/detail/ryu/impl/d2s.ipp",
#                 "json/detail/handler.hpp",
#                 "json/detail/value_from.hpp",
#                 "json/detail/value_traits.hpp",
#                 "json/detail/string_impl.hpp",
#                 "json/detail/array.hpp",
#                 "json/detail/except.hpp",
#                 "json/detail/config.hpp",
#                 "json/detail/value_to.hpp",
#                 "json/detail/object.hpp",
#                 "json/fwd.hpp",
#                 "json/null_resource.hpp",
#                 "json/parser.hpp",
#                 "json/storage_ptr.hpp",
#                 "json/parse_options.hpp",
#                 "json/string.hpp",
#                 "json/value_stack.hpp",
#                 "json/error.hpp",
#                 "json/value.hpp",
#                 "json/serialize.hpp",
#                 "json/kind.hpp",
#                 "json/impl/null_resource.ipp",
#                 "json/impl/static_resource.ipp",
#                 "json/impl/value_stack.ipp",
#                 "json/impl/value.ipp",
#                 "json/impl/serializer.ipp",
#                 "json/impl/stream_parser.ipp",
#                 "json/impl/array.ipp",
#                 "json/impl/pointer.ipp",
#                 "json/impl/serialize.ipp",
#                 "json/impl/string.hpp",
#                 "json/impl/monotonic_resource.ipp",
#                 "json/impl/kind.ipp",
#                 "json/impl/error.hpp",
#                 "json/impl/value_ref.ipp",
#                 "json/impl/string.ipp",
#                 "json/impl/parse.ipp",
#                 "json/impl/parser.ipp",
#                 "json/impl/value_ref.hpp",
#                 "json/impl/array.hpp",
#                 "json/impl/object.ipp",
#                 "json/impl/error.ipp",
#                 "json/impl/visit.hpp",
#                 "json/impl/object.hpp",
#                 "json/system_error.hpp",
#                 "json/parse.hpp",
#                 "json/basic_parser_impl.hpp",
#                 "json/src.hpp",
#                 "json/stream_parser.hpp",
#                 "json/value_from.hpp",
#                 "json/value_ref.hpp",
#                 "json/array.hpp",
#                 "json/visit.hpp",
#                 "json/basic_parser.hpp",
#                 "json/value_to.hpp",
#                 "json/object.hpp",
#                 "json/string_view.hpp",
#                 "json/serializer.hpp",
#                 "json/memory_resource.hpp",
#                 "json/pilfer.hpp",
#                 "json/monotonic_resource.hpp",

#             ],
#     },
# }.items()]
